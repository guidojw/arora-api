# Configuration for DI
services:
  # Controllers
  BanController:
    class: app/controllers/v1
    main: BanController
    arguments: ['@BanService']
  CatalogController:
    class: app/controllers/v1
    arguments: ['@CatalogService']
    main: CatalogController
  GroupController:
    class: app/controllers/v1
    main: GroupController
    arguments: ['@ExileService', '@GroupService', '@SuspensionService', '@TrainingService']
  StatusController:
    class: app/controllers/v1
    main: StatusController
    arguments: ['@StatusService']
  UserController:
    class: app/controllers/v1
    main: UserController
    arguments: ['@UserService']

  # Jobs
  AcceptJoinRequestsJob:
    class: app/jobs
    main: AcceptJoinRequestsJob
    arguments: ['@DiscordMessageJob', '@GroupService', '@RobloxManager']
  AnnounceTrainingsJob:
    class: app/jobs
    main: AnnounceTrainingsJob
    arguments: ['@GroupService', '@UserService']
  CheckSuspensionsJob:
    class: app/jobs
    main: CheckSuspensionsJob
    arguments: ['@FinishSuspensionJob']
  DiscordMessageJob:
    class: app/jobs
    main: DiscordMessageJob
  FinishSuspensionJob:
    class: app/jobs
    main: FinishSuspensionJob
    arguments: ['@DiscordMessageJob', '@GroupService', '@UserService']
  PayoutTrainDevelopersJob:
    class: app/jobs
    main: PayoutTrainDevelopersJob
    arguments: ['@RobloxManager', '@WebSocketManager']

  # Managers
  RobloxManager:
    class: app/managers
    main: RobloxManager
  WebSocketManager:
    class: app/managers
    main: WebSocketManager

  # Middlewares
  AuthMiddleware:
    class: app/middlewares
    main: AuthMiddleware
    arguments: ['@AuthService']
  ErrorMiddleware:
    class: app/middlewares
    main: ErrorMiddleware

  # Routes
  BansRouter:
    class: app/routes
    main: BansRouter
    arguments: ['@AuthMiddleware', '@BanController', '@ErrorMiddleware']
  CatalogRouter:
    class: app/routes
    main: CatalogRouter
    arguments: ['@AuthMiddleware', '@CatalogController', '@ErrorMiddleware']
  GroupsRouter:
    class: app/routes
    main: GroupsRouter
    arguments: ['@AuthMiddleware', '@ErrorMiddleware', '@GroupController']
  StatusRouter:
    class: app/routes
    main: StatusRouter
    arguments: ['@AuthMiddleware', '@ErrorMiddleware', '@StatusController']
  UsersRouter:
    class: app/routes
    main: UsersRouter
    arguments: ['@AuthMiddleware', '@ErrorMiddleware', '@UserController']

  # Services
  AuthService:
    class: app/services
    main: AuthService
  BanService:
    class: app/services
    main: BanService
    arguments: ['@DiscordMessageJob', '@UserService']
  CatalogService:
    class: app/services
    main: CatalogService
  ExileService:
    class: app/services
    main: ExileService
    arguments: ['@DiscordMessageJob', '@GroupService', '@UserService']
  GroupService:
    class: app/services
    main: GroupService
    arguments: ['@DiscordMessageJob', '@RobloxManager', '@UserService', '@WebSocketManager']
  StatusService:
    class: app/services
    main: StatusService
    arguments: ['@RobloxManager']
  SuspensionService:
    class: app/services
    main: SuspensionService
    arguments: ['@DiscordMessageJob', '@FinishSuspensionJob', '@GroupService', '@UserService']
  TrainingService:
    class: app/services
    main: TrainingService
    arguments: ['@AnnounceTrainingsJob', '@DiscordMessageJob', '@UserService']
  UserService:
    class: app/services
    main: UserService
    arguments: ['@RobloxManager']
