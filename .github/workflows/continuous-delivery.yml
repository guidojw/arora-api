name: Continuous Delivery

on:
  workflow_dispatch:
    inputs:
      merge:
        description: Merge staging into main first? (y/N)
        required: false
        default: 'n'

concurrency:
  group: cd-${{ github.ref_name }}

env:
  PROJECT_NAME: arora-api
  SENTRY_ORG: guidos-projects
  APP_ID: 152323

jobs:
  branch_check:
    name: Branch Check
    runs-on: ubuntu-latest
    steps:
      - name: Validate branch
        run: |
          if [ "$GITHUB_REF_NAME" != 'staging' ] && [ "$GITHUB_REF_NAME" != 'main' ]; then
            echo 'This workflow can only be run on branches staging and main.'
            exit 1
          fi

  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    needs: branch_check
    outputs:
      has_diff: ${{ steps.get_metadata.outputs.has_diff }}
      stage: ${{ steps.get_metadata.outputs.stage }}
    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Get metadata
        id: get_metadata
        env:
          INPUT_MERGE: ${{ github.event.inputs.merge }}
        run: |
          if [ "$GITHUB_REF_NAME" = 'main' ]; then
            if [ "${INPUT_MERGE,,}" = 'y' ]; then
              git fetch origin staging
              if ! git diff origin/main origin/staging --exit-code; then
                echo '::set-output name=has_diff::true'
              else
                echo '::set-output name=has_diff::false'
              fi
            fi

            echo '::set-output name=stage::production'
          else
            echo '::set-output name=stage::staging'
          fi

  merge:
    name: Merge
    runs-on: ubuntu-latest
    needs: metadata
    if: github.event.inputs.merge == 'y'
    outputs:
      sha: ${{ steps.get_sha.outputs.sha }}
    steps:
      - name: Validate inputs
        env:
          HAS_DIFF: ${{ fromJSON(needs.metadata.outputs.has_diff || false) }}
        run: |
          if [ "$GITHUB_REF_NAME" != 'main' ]; then
            echo 'Can only merge when the workflow target branch is main.'
            exit 1
          fi

          if ! $HAS_DIFF; then
            echo 'There is no diff so a merge is not necessary, skipping next steps.'
          fi

      - name: Checkout code
        if: fromJSON(needs.metadata.outputs.has_diff)
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Run merge
        if: fromJSON(needs.metadata.outputs.has_diff)
        uses: devmasx/merge-branch@854d3ac71ed1e9deb668e0074781b81fdd6e771f # tag=v1.4.0
        with:
          type: now
          from_branch: staging
          target_branch: main
          github_token: ${{ github.token }}

      - name: Get merge commit SHA
        id: get_sha
        if: fromJSON(needs.metadata.outputs.has_diff)
        run: |
          git fetch origin main
          echo '::set-output name=sha::'"$(git rev-parse origin/main)"

  continuous_integration:
    name: Continuous Integration
    needs: [metadata, merge]
    if: fromJSON(needs.metadata.outputs.has_diff)
    uses: guidojw/arora-api/.github/workflows/continuous-integration.yml@staging
    with:
      sha: ${{ needs.merge.outputs.sha }}

  publish_image:
    name: Publish Image
    needs: [metadata, merge]
    if: fromJSON(needs.metadata.outputs.has_diff)
    uses: guidojw/arora-api/.github/workflows/publish-image.yml@staging
    with:
      sha: ${{ needs.merge.outputs.sha }}
    secrets:
      sentry_auth_token: ${{ secrets.SENTRY_AUTH_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [metadata, merge, continuous_integration, publish_image]
    if: |
      (github.ref_name == 'staging' || github.ref_name == 'main') && ((github.ref_name == 'main' &&
      github.event.inputs.merge == 'y' && fromJSON(needs.metadata.outputs.has_diff) && success()) ||
      ((github.event.inputs.merge != 'y' || !fromJSON(needs.metadata.outputs.has_diff)) && !cancelled()))
    steps:
      - name: Get environment URL
        id: get_url
        run: |
          if [ "$GITHUB_REF_NAME" = 'main' ]; then
            echo '::set-output name=environment_url::https://nsadmin.guidojw.nl/api'
          else
            echo '::set-output name=environment_url::https://staging.nsadmin.guidojw.nl/api'
          fi

      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          ref: ${{ needs.merge.outputs.sha }}

      - name: Start deployment
        uses: bobheadxi/deployments@9d4477fdaa4120020cd10ab7e97f68c801422e73 # tag=v1.3.0
        id: start_deployment
        with:
          step: start
          env: ${{ needs.metadata.outputs.stage }}

      - name: Deploy
        uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0 # tag=v0.1.5
        env:
          STAGE: ${{ needs.metadata.outputs.stage }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: github-actions
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: PROJECT_NAME,STAGE
          script: |
            cd /opt/docker/$PROJECT_NAME/$STAGE
            docker-compose pull
            docker-compose run --rm app yarn run typeorm migration:run
            docker-compose up -d

      - name: Finalize Sentry release
        uses: getsentry/action-release@426b54786363ee2ecb27129f04b99cf714a36d38 # tag=v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROJECT: ${{ env.PROJECT_NAME }}
        with:
          environment: ${{ needs.metadata.outputs.stage }}
          version: ${{ needs.merge.outputs.sha }}
          set_commits: skip

      - name: Finish deployment
        uses: bobheadxi/deployments@9d4477fdaa4120020cd10ab7e97f68c801422e73 # tag=v1.3.0
        if: steps.start_deployment.conclusion == 'success' && always()
        with:
          step: finish
          status: ${{ job.status }}
          deployment_id: ${{ steps.start_deployment.outputs.deployment_id }}
          env: ${{ needs.metadata.outputs.stage }}
          env_url: ${{ steps.get_url.outputs.environment_url }}

  update_check_run:
    name: Update Check Run
    runs-on: ubuntu-latest
    needs: [branch_check, metadata, merge, continuous_integration, publish_image, deploy]
    if: (github.ref_name == 'staging' || github.ref_name == 'main') && always()
    steps:
      - name: Get conclusion
        id: get_conclusion
        env:
          RESULTS: ${{ join(needs.*.result, ' ') }}
        run: |
          echo '::set-output name=conclusion::success'
          for RESULT in $RESULTS; do
            if [ "$RESULT" = 'cancelled' ] || [ "$RESULT" = 'failure' ]; then
              echo '::set-output name=conclusion::'"$RESULT"
              break
            fi
          done

      - name: Update Continuous Delivery check run
        uses: guidojw/actions/update-check-run@5faa9418b42a6a77f81e11ae935287900673f98b # tag=v1.3.2
        with:
          app_id: ${{ env.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          sha: ${{ needs.merge.outputs.sha }}
          name: Continuous Delivery
          conclusion: ${{ steps.get_conclusion.outputs.conclusion }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
