name: Publish Image

on:
  push:
    branches: [staging, main]
  workflow_call:
    inputs:
      sha:
        required: false
        type: string
    secrets:
      sentry_auth_token:
        required: true
  workflow_dispatch:

env:
  PROJECT_NAME: arora-api
  REGISTRY_URL: ghcr.io
  SENTRY_ORG: guidos-projects
  APP_ID: 152323

jobs:
  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_metadata.outputs.tag }}
      build_args: ${{ steps.get_metadata.outputs.build_args }}
    steps:
      - name: Get metadata
        id: get_metadata
        run: |
          if [ $GITHUB_REF_NAME = 'main' ]; then
            echo '::set-output name=tag::latest'
          else
            echo '::set-output name=tag::'$GITHUB_REF_NAME
          fi

          if [ $GITHUB_REF_NAME = 'staging' ] || [ $GITHUB_REF_NAME = 'main' ]; then
            BUILD_ARGS='BUILD_HASH='$GITHUB_SHA
            if [ $GITHUB_REF_NAME = 'main' ]; then
              BUILD_ARGS+=$'\nNODE_ENV=production'

              echo '::set-output name=stage::production'
            else
              BUILD_ARGS+=$'\nNODE_ENV=staging'

              echo '::set-output name=stage::staging'
            fi
            BUILD_ARGS=${BUILD_ARGS//$'\n'/'%0A'}
            echo '::set-output name=build_args::'$BUILD_ARGS
          fi

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1.10.0
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: build_push_image
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: tag=v2.7.0
        with:
          push: true
          context: .
          build-args: ${{ needs.metadata.outputs.build_args }}
          cache-from: type=gha,scope=main
          cache-to: type=gha,scope=main
          tags: |
            ${{ env.REGISTRY_URL }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}:${{
            needs.metadata.outputs.tag }}

      - name: Get sourcemaps from image
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.workflow == 'Publish Image') }}
        env:
          IMAGE_NAME: ${{ fromJSON(steps.build_push_image.outputs.metadata)['image.name'] }}
        run: |
          docker cp $(docker create $IMAGE_NAME):/opt/app/dist/. sourcemaps

      - name: Create Sentry release
        if: ${{ !(github.event_name == 'workflow_dispatch' && github.workflow == 'Publish Image') }}
        uses: getsentry/action-release@744e4b262278339b79fb39c8922efcae71e98e39 # renovate: tag=v1.1.6
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROJECT: ${{ env.PROJECT_NAME }}
        with:
          environment: ${{ needs.metadata.outputs.stage }}
          finalize: false
          sourcemaps: sourcemaps
          url_prefix: ~/dist

  update_check_run:
    name: Update Check Run
    runs-on: ubuntu-latest
    needs: [metadata, publish]
    if: github.event_name == 'workflow_dispatch' && github.workflow == 'Publish Image' && always()
    steps:
      - name: Get conclusion
        id: get_conclusion
        env:
          RESULTS: ${{ join(needs.*.result, ' ') }}
        run: |
          echo '::set-output name=conclusion::success'
          for RESULT in $RESULTS; do
            if [ $RESULT = 'cancelled' ] || [ $RESULT = 'failure' ]; then
              echo '::set-output name=conclusion::'$RESULT
              break
            fi
          done

      - name: Update Publish Image check run
        uses: guidojw/actions/update-check-run@fcb92ed90a3965b130f4e5ed3f53df9ef65e6de1 # renovate: tag=v1.0.0
        with:
          app_id: ${{ env.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          name: Publish Image
          conclusion: ${{ steps.get_conclusion.outputs.conclusion }}
          details_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
