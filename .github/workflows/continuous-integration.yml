name: Continuous Integration

on:
  push:
    branches: [staging, main]
  pull_request:
  workflow_call:
    inputs:
      sha:
        description: The commit SHA to run the workflow on
        required: false
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          ref: ${{ inputs.sha }}

      - name: Install cloudflared
        run: |
          curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared '"$(lsb_release -cs)"' main' | sudo tee /etc/apt/sources.list.d/cloudflared.list
          sudo apt update && sudo apt install cloudflared

      - name: Set up SSH key
        uses: shimataro/ssh-key-action@02d189fc92ea6279c0fea0e7a259da1b4f1d22a5 # v2.5.0
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          config: |
            Host maya
              HostName ${{ secrets.SSH_HOST }}
              User github-actions
              IdentityFile ~/.ssh/id_rsa
              ProxyCommand cloudflared access ssh --hostname %h --id ${{ secrets.CLOUDFLARE_SERVICE_TOKEN_ID }} --secret ${{ secrets.CLOUDFLARE_SERVICE_TOKEN_SECRET }}

      - name: Test
        run: |
          ssh maya '
            whoami
          '

      - name: Add problem matchers
        run: |
          echo '::add-matcher::.github/problem-matchers/tsc.json'

      - name: Build test image
        uses: guidojw/actions/build-docker-image@abb0ee8d1336edf73383f2e5a09abd3a22f25b13 # v1.3.3
        with:
          name: app

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          ref: ${{ inputs.sha }}

      - name: Add problem matchers
        run: |
          echo '::add-matcher::.github/problem-matchers/actionlint.json'
          echo '::add-matcher::.github/problem-matchers/eslint-stylish.json'

      - name: Download actionlint
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash) 1.6.22

      - name: Load test image
        uses: guidojw/actions/load-docker-image@abb0ee8d1336edf73383f2e5a09abd3a22f25b13 # v1.3.3
        with:
          name: app

      - name: Lint
        run: |
          EXIT_STATUS=0
          ./actionlint -ignore 'property "app_private_key" is not defined' -ignore 'SC2153:' \
            -ignore 'property "sha" is not defined in object type {}' -ignore 'SC2087:' || EXIT_STATUS=$?
          docker run app yarn lint || EXIT_STATUS=$?
          exit $EXIT_STATUS
